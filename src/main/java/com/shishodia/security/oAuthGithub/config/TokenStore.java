package com.shishodia.security.oAuthGithub.config;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Component;

@Component
public class TokenStore {

    private final Map<String, Authentication> cache = new HashMap<>();

    /** Responsible for generating token using a random UUID (universal unique identifier). */
    public String generateToken(Authentication authentication) {
        /* OAuth2AuthenticationToken returned by Github after successful authorization includes many principals 
         * and user parameters but not the token. Token is generated by this Springboot service as we 
         * know that the oAuth is successful, we can create and provide our own token now to the UI.
         * NOTE: Refer HomeController to check the values returned by Github in OAuth2AuthenticationToken.
         * NOTE: Github is the Resource Server for user info. This Spring boot service is the Authorization 
         * Server which manages token inside HashMap cache.
         * NOTE: In oAuth, Resource Server provides resources (user info, photos, etc) and Authorization 
         * Server manages tokens.
         */
        String token = UUID.randomUUID().toString();
        cache.put(token, authentication);
        return token;
    }

    /** Fetch the token available in the hashmap cache. */
    public Authentication getAuth(String token) {
        return cache.getOrDefault(token, null);
    }
    
}
